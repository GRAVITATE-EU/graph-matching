[all_app]

# ground truth for eval
artefacts_file_with_clusters: naukratis_artefact_clusters_all.txt

# test data
artefacts_file: artefacts.txt

[sed_app]
stars_definition_file: starsDefinition.txt
distances_sed_app_file: file_distances_between_artefacts
artefacts_as_sets_of_nodes_file: artefacts_as_sets_of_nodes.txt

# number of processes to spawn for hungarian (match to number of available CPU cores)
process_count=8

# max threshold for hungarian distance (above which values are discarded) for a pair of artifacts
# 0.0 = exact match, 50.0 is not very similar at all
threshold_similarity_sed: 500.0

[ged_app]

[rdf_walks2vec_app]
file_with_walks: output_construct

distances_rdf_walks2vec_app_file: file_distances_between_artefacts

min_count_input: 3
window_input: 5
iter_input: 100
size_input: 200

# max threshold for cosine_distance (above which values are discarded) for a pair of artifacts
# target about 200,000 distances max as this will be quite verbose as a RDF similarity matrix
# 0.0 = exact match, 1.0 is not very similar
# note: setting threshold to 100.0 and topN to 10 will ensure all artifacts get best 10 matches. using threshold with topN = -1 means otherwise only best matches globally are returned. 
threshold_similarity_rdf2vec: 100.0

# max number of similarity enties per artifact (which also meet the similarity threshold)
# the similarity values will be sorted in order of distance (nearest first), then the topN chosen. this avoids the possible matches getting too large (e.g. 9000x9000)
# set to -1 to take all matches
similarity_top_n: 250


[evaluation_app]
yield: 10, 50, 100, 500, 1000, 2000, 5000, 10000, 20000, 50000
dataset_normalized: False
distances_file: file_distances_between_artefacts
precision_scores_file: precision_scores_file

